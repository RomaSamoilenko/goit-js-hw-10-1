{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst text = document.querySelector('#datetime-picker');\nconst timerHtml = document.querySelector('.timer');\nconst btnStart = document.querySelector('button[data-start]');\nconst seconds = document.querySelector('span[data-seconds]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst hours = document.querySelector('span[data-hours]');\nconst days = document.querySelector('span[data-days]');\n\nbtnStart.disabled = true; \n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) { \n\n    \n    if (selectedDates[0] < new Date()) {\n\n      \n      iziToast.warning({\n        title: 'Caution',\n        message: 'Please choose a date in the future',\n    });\n      btnStart.disabled = true; \n    } else {\n      \n      btnStart.disabled = false;\n    }\n  },\n};\n\n\nflatpickr(text, options);\n\n\nfunction convertMs(ms) { \n\n  \n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  \n  const days = Math.floor(ms / day);\n  \n  const hours = Math.floor((ms % day) / hour);\n  \n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  \n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\nfunction addLeadingZero(value) {\n\n  \n  return value.toString().padStart(2, '0');\n}\n\n\nbtnStart.addEventListener('click', () => {\n\n \n  let timer = setInterval(() => {\n\n    \n    let countdown = new Date(text.value) - new Date();\n\n    btnStart.disabled = true; \n\n   \n    if (countdown >= 0) {\n      \n      let timeObject = convertMs(countdown);\n\n     \n      days.textContent = addLeadingZero(timeObject.days);\n      hours.textContent = addLeadingZero(timeObject.hours);\n      minutes.textContent = addLeadingZero(timeObject.minutes);\n      seconds.textContent = addLeadingZero(timeObject.seconds);\n\n      \n      if (countdown <= 10000) {\n        timerHtml.style.color = 'red'; \n      }\n    } else {\n      \n      iziToast.success({\n        title: 'OK',\n        message: 'Countdown finished!',\n    });\n     \n      timerHtml.style.color = 'black'; \n      clearInterval(timer); \n    }\n  }, 1000); \n});"],"names":["text","timerHtml","btnStart","seconds","minutes","hours","days","options","selectedDates","iziToast","flatpickr","convertMs","ms","addLeadingZero","value","timer","countdown","timeObject"],"mappings":"2FAUA,MAAMA,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAY,SAAS,cAAc,QAAQ,EAC3CC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAO,SAAS,cAAc,iBAAiB,EAErDJ,EAAS,SAAW,GAGpB,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGjBA,EAAc,CAAC,EAAI,IAAI,MAGzBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACjB,CAAK,EACCP,EAAS,SAAW,IAGpBA,EAAS,SAAW,EAEvB,CACH,EAGAQ,EAAUV,EAAMO,CAAO,EAGvB,SAASI,EAAUC,EAAI,CASrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BP,EAAQ,KAAK,MAAOO,EAAK,MAAO,IAAI,EAEpCR,EAAU,KAAK,MAAQQ,EAAK,MAAO,KAAQ,GAAM,EAEjDT,EAAU,KAAK,MAASS,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAD,EAAO,QAAAD,EAAS,QAAAD,CAAO,CACxC,CAGA,SAASU,EAAeC,EAAO,CAG7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAGAZ,EAAS,iBAAiB,QAAS,IAAM,CAGvC,IAAIa,EAAQ,YAAY,IAAM,CAG5B,IAAIC,EAAY,IAAI,KAAKhB,EAAK,KAAK,EAAI,IAAI,KAK3C,GAHAE,EAAS,SAAW,GAGhBc,GAAa,EAAG,CAElB,IAAIC,EAAaN,EAAUK,CAAS,EAGpCV,EAAK,YAAcO,EAAeI,EAAW,IAAI,EACjDZ,EAAM,YAAcQ,EAAeI,EAAW,KAAK,EACnDb,EAAQ,YAAcS,EAAeI,EAAW,OAAO,EACvDd,EAAQ,YAAcU,EAAeI,EAAW,OAAO,EAGnDD,GAAa,MACff,EAAU,MAAM,MAAQ,MAEhC,MAEMQ,EAAS,QAAQ,CACf,MAAO,KACP,QAAS,qBACjB,CAAK,EAECR,EAAU,MAAM,MAAQ,QACxB,cAAcc,CAAK,CAEtB,EAAE,GAAI,CACT,CAAC"}