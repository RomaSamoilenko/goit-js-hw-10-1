{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n    input: document.querySelector('#datetime-picker'),\n    start: document.querySelector('button[data-start]'),\n    days: document.querySelector('span[data-days]'),\n    hours: document.querySelector('span[data-hours]'),\n    mins: document.querySelector('span[data-minutes]'),\n    secs: document.querySelector('span[data-seconds]'),\n  };\n  \n  let intervalId = null;\n  refs.start.disabled = true;\n  \n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      console.log(selectedDates[0]);\n  \n      if (selectedDates[0] < new Date()) {\n        refs.start.disabled = true;\n        Notiflix.Notify.failure('Please choose a date in the future! Do not look back..');\n        return;\n      }\n      if (selectedDates[0] > new Date()) {\n        refs.start.disabled = false;\n      }\n  \n      refs.start.addEventListener('click', () => {\n        intervalId = setInterval(() => {\n          const differenceInTime = selectedDates[0] - new Date();\n  \n          if (differenceInTime < 1000) {\n            clearInterval(intervalId);\n          }\n          const result = convertMs(differenceInTime);\n          viewOfTimer(result);\n        }, 1000);\n      });\n    },\n  };\n  \n  flatpickr('#datetime-picker', options);\n  \n  function viewOfTimer({ days, hours, minutes, seconds }) {\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${minutes}`;\n    refs.secs.textContent = `${seconds}`;\n  }\n  \n  function addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n  \n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = addLeadingZero(Math.floor(ms / day));\n    const hours = addLeadingZero(Math.floor((ms % day) / hour));\n    const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n    const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n  \n    return { days, hours, minutes, seconds };\n  }"],"names":["refs","intervalId","options","selectedDates","differenceInTime","result","convertMs","viewOfTimer","flatpickr","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"oFAMA,MAAMA,EAAO,CACT,MAAO,SAAS,cAAc,kBAAkB,EAChD,MAAO,SAAS,cAAc,oBAAoB,EAClD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,KAAM,SAAS,cAAc,oBAAoB,EACjD,KAAM,SAAS,cAAc,oBAAoB,CACrD,EAEE,IAAIC,EAAa,KACjBD,EAAK,MAAM,SAAW,GAEtB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFA,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAExBA,EAAc,CAAC,EAAI,IAAI,KAAQ,CACjCH,EAAK,MAAM,SAAW,GACtB,SAAS,OAAO,QAAQ,wDAAwD,EAChF,MACD,CACGG,EAAc,CAAC,EAAI,IAAI,OACzBH,EAAK,MAAM,SAAW,IAGxBA,EAAK,MAAM,iBAAiB,QAAS,IAAM,CACzCC,EAAa,YAAY,IAAM,CAC7B,MAAMG,EAAmBD,EAAc,CAAC,EAAI,IAAI,KAE5CC,EAAmB,KACrB,cAAcH,CAAU,EAE1B,MAAMI,EAASC,EAAUF,CAAgB,EACzCG,EAAYF,CAAM,CACnB,EAAE,GAAI,CACf,CAAO,CACF,CACL,EAEEG,EAAU,mBAAoBN,CAAO,EAErC,SAASK,EAAY,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDZ,EAAK,KAAK,YAAc,GAAGS,CAAI,GAC/BT,EAAK,MAAM,YAAc,GAAGU,CAAK,GACjCV,EAAK,KAAK,YAAc,GAAGW,CAAO,GAClCX,EAAK,KAAK,YAAc,GAAGY,CAAO,EACnC,CAED,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAED,SAASR,EAAUS,EAAI,CAOrB,MAAMN,EAAOI,EAAe,KAAK,MAAME,EAAK,KAAG,CAAC,EAC1CL,EAAQG,EAAe,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EACpDJ,EAAUE,EAAe,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEH,EAAUC,EAAe,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAElF,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}